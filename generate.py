import os
from datetime import datetime, date
import time
from email import utils
from jinja2 import Environment, PackageLoader
from markdown2 import markdown
from feedgen.feed import FeedGenerator

POSTS = {}

for markdown_post in os.listdir('content'):
    file_path = os.path.join('content', markdown_post)

    with open(file_path, 'r') as file:
        POSTS[markdown_post] = markdown(file.read(), extras=['metadata'])


POSTS = {
    post: POSTS[post] for post in sorted(POSTS, key=lambda post: datetime.strptime(POSTS[post].metadata['date'], '%d-%m-%Y'), reverse=True)
}

env = Environment(loader=PackageLoader('generate', 'templates'))
home_template = env.get_template('home.html')
post_template = env.get_template('post.html')

posts_metadata = [POSTS[post].metadata for post in POSTS]
tags = []
for post in posts_metadata:
    if post['blog'] == 'yes':
        tags.extend(post['tags'].split(', '))
tags = list(set(tags))
tags.sort()

tag_template = env.get_template('tag.html')
for tag in tags:
    tagposts_metadata = [
        POSTS[post].metadata for post in POSTS if tag in POSTS[post].metadata['tags'].split(', ')]
    tag_html = tag_template.render(tagposts=tagposts_metadata, tag=tag)
    with open('output/posts/tag-'+tag+'.html', 'w') as file:
        file.write(tag_html)


home_html = home_template.render(posts=posts_metadata, tags=tags)

with open('output/index.html', 'w') as file:
    file.write(home_html)

for post in POSTS:
    post_metadata = POSTS[post].metadata

    post_clean = POSTS[post]
    for char in '-.,\n':
        post_clean = post_clean.replace(char, ' ')
    post_clean = post_clean.lower()

    post_words = post_clean.split()

    post_data = {
        'content': POSTS[post],
        'title': post_metadata['title'],
        'date': post_metadata['date'],
        'blog': post_metadata['blog'],
        'readtime': round(len(post_words)/200)
    }

    post_html = post_template.render(post=post_data)
    post_file_path = 'output/posts/{slug}.html'.format(
        slug=post_metadata['slug'])

    os.makedirs(os.path.dirname(post_file_path), exist_ok=True)
    with open(post_file_path, 'w') as file:
        file.write(post_html)


filecontent = '<?xml version="1.0" encoding="utf-8"?>\n<rss xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">\n<channel>'
filecontent += '<!--  RSS generated by ecstatic, a minimal static site generator  -->'
filecontent += "<title>Author's Blog</title>\n<link>https://blogurl.domain/</link>\n<description>Feed for Author's personal blog</description>\n<lastBuildDate>"+ (date.today().strftime("%a, %d %b %Y")) +"</lastBuildDate>\n"

for post in POSTS:
    post_metadata = POSTS[post].metadata
    postdate=datetime.strptime(post_metadata['date'],"%d-%m-%Y")
    nowdate=datetime.strptime(date.today().strftime("%d-%m-%Y"),"%d-%m-%Y")
    daydiff = nowdate - postdate

    if daydiff.days <= 180 and post_metadata['blog']=='yes':
        filecontent+= "<item>\n"
        filecontent+= "<title>"+post_metadata['title']+"</title>\n"
        filecontent+= "<link>"+"https://blogurl.domain/posts/"+post_metadata['slug']+".html"+"</link>\n"
        filecontent+= "<pubDate>"+datetime.strptime(post_metadata['date'],"%d-%m-%Y").strftime("%a, %d %b %Y")+"</pubDate>\n"
        filecontent+= "<description>"+post_metadata['summary']+"</description>"
        filecontent+= "\n<content:encoded><![CDATA["+POSTS[post]+"]]></content:encoded>\n"
        filecontent+= "</item>\n"

filecontent+= "</channel>\n</rss>"

with open('output/feed.xml', 'w') as file:
    file.write(filecontent)
